on:
  push:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * *'
  pull_request:
    branches: [ master ]
name: CI/CD
jobs:
  test:
    name: Run project tests
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.0

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Install composer dependencies
      run: |
        composer install --no-scripts

    - name: Prepare Laravel Application
      run: |
        cp .env.ci .env
        php artisan key:generate

    - name: Install front-end dependencies
      run: |
        npm install
        npm run dev

    - name: Run Testsuite
      run: vendor/bin/phpunit tests/

  deploy:
    name: Deploy to production
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Prep the env file
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          echo "$ENV_FILE" > .env

      - name: Place the env file via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".env"
          target: "/var/www/"

      - name: Deployment
        shell: 'script -q -e -c "bash {0}"'
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USERNAME }}
        run: |
          pwd
          echo "$SSH_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${SSH_USER}@${SSH_HOST} '
            cd /var/www &&
            git checkout master -f &&
            git pull origin master &&
            mv docker-compose-prod.yml docker-compose.yml &&
            appcid=$(sudo docker ps -f name=app -q | head -n1) &&
            sudo docker exec $appcid composer install --no-scripts &&
            sudo docker exec $appcid npm install &&
            sudo docker exec $appcid npm run production &&
            sudo docker exec $appcid php artisan storage:link &&
            sudo docker exec $appcid php artisan migrate --force &&
            sudo docker exec $(sudo docker ps -f name=qworker -q | head -n1) php /var/www/artisan horizon:terminate
          '
