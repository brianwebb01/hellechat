version: '3'
services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        FPMPORT: 9000
    image: hellechat/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    depends_on:
      - mysql


  nginx:
    image: nginx:alpine
    depends_on:
      - app
      - gotify
    container_name: nginx
    restart: unless-stopped
    tty: true
    environment:
      GOTIFY_APP_PORT: '${GOTIFY_APP_PORT}'
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/default.template:/etc/nginx/conf.d/default.template
      - ./docker/nginx/entrypoint.sh:/entrypoint.sh
    networks:
      - app-network
    entrypoint: ["/entrypoint.sh"]
    command: ["nginx", "-g", "daemon off;"]


  gotify:
    image: gotify/server
    container_name: gotify
    depends_on:
      - mysql
    expose:
        - ${GOTIFY_APP_PORT}
        - ${GOTIFY_APP_PORT_SSL}
    volumes:
        - 'godata:/app/data'
        - ./docker/gotify/config.yml:/etc/gotify/config.yml
    restart: unless-stopped
    networks:
      - app-network
    environment:
      GOTIFY_SERVER_PORT: '${GOTIFY_APP_PORT}'
      GOTIFY_SERVER_SSL_PORT: '${GOTIFY_APP_PORT_SSL}'
      GOTIFY_DEFAULTUSER_NAME: ${GOTIFY_USERNAME}
      GOTIFY_DEFAULTUSER_PASS: ${GOTIFY_PASSWORD}
      GOTIFY_DATABASE_DIALECT: 'mysql'
      GOTIFY_DATABASE_CONNECTION: '${DB_USERNAME}:${DB_PASSWORD}@tcp(mysql:3306)/gotify?charset=utf8&parseTime=True&loc=Local'



  mysql:
    image: 'mysql:8.0'
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - 'dbdata:/var/lib/mysql'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s


  mailhog:
    container_name: mailhog
    image: 'mailhog/mailhog:latest'
    ports:
        - '${FORWARD_MAILHOG_PORT:-1025}:1025'
        - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
        - app-network


networks:
  app-network:
    driver: bridge
volumes:
  godata:
    driver: local
  dbdata:
    driver: local